.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "KDB\-CMERGE" "1" "October 2019" "" ""
.
.SH "NAME"
\fBkdb\-cmerge\fR \- Three\-way merge of KeySets
.
.SH "NAME"
kdb\-cmerge \- Join three key sets together
.
.SH "SYNOPSIS"
\fBkdb cmerge [OPTIONS] our their base result\fR
.
.TP
ourpath
Path to the keyset to serve as \fBour\fR
.
.br

.
.TP
theirpath
path to the keyset to serve as \fBtheir\fR
.
.br

.
.TP
basepath
path to the \fBbase\fR keyset
.
.br

.
.TP
resultpath
path without keys where the merged keyset will be saved
.
.br

.
.SH "DESCRIPTION"
\fBkdb cmerge\fR can incorporate changes from two modified versions (our and their) into a common preceding version (base) of a key set\. This lets you merge the sets of changes represented by the two newer key sets\. This is called a three\-way merge between key sets\.
.
.br
On success the resulting keyset will be saved to mergepath\.
.
.br
On unresolved conflicts nothing will be changed\.
.
.br
This tool currently exists alongside \fBkdb merge\fR until it is completely ready to supersede it\. At this moment, cmerge will be renamed to merge\.
.
.SH "Options"
The options of \fBkdb cmerge\fRare:
.
.IP "\(bu" 4
\fB\-f\fR, \fB\-\-force\fR: overwrite existing keys in \fBresult\fR
.
.IP "\(bu" 4
\fB\-v\fR, \fB\-\-verbose\fR: give additional information
.
.IP "" 0
.
.P
Strategies offer fine grained control over conflict handling\. The option is:
.
.IP "\(bu" 4
\fB\-s <name>\fR, \fB\-\-strategy <name>\fR: which is used to specify a strategy to use in case of a conflict
.
.IP "" 0
.
.SH "Strategies"
The available strategies are:
.
.IP "\(bu" 4
\fBabort\fR: the merge will abort if any conflict happens and merge the 3 key sets together otherwise\.
.
.IP "\(bu" 4
\fBour\fR: This option forces conflicting keys to be auto\-resolved cleanly by favoring \fBour\fR\. Changes from the other key sets that do not conflict with the \fBour\fR version are reflected to the merge result\. This works like the recursive strategy with the \fBours\fR option from git\-merge\.
.
.IP "\(bu" 4
\fBtheir\fR: This is the opposite of \fBour\fR\. The merge will use the \fBtheir\fR version when a conflict happens\.
.
.IP "" 0
.
.P
If no strategy is specified, the merge will default to the abort strategy\.
.
.SH "Return value"
0 on success\.
.
.P
1 if an error happened
.
.P
2 if a merge conflict occured and merge strategy abort was set
.
.P
The result of the merge is stored in \fBresult\fR\.
.
.SH "THREE\-WAY MERGE"
You can think of the three\-way merge as subtracting base from their and adding the result to our, or as merging into our the changes that would turn base into their\. Thus, it behaves exactly as the GNU diff3 tool\. These three versions of the KeySet are:
.
.br
.
.TP
\fBbase\fR
The \fBbase\fR KeySet is the original version of the key set\.
.
.br

.
.TP
\fBour\fR
The \fBour\fR KeySet represents the user\'s current version of the KeySet\.
.
.br
This KeySet differs from \fBbase\fR for every key you changed\.
.
.br

.
.TP
\fBtheir\fR
The \fBtheir\fR KeySet usually represents the default version of a KeySet (usually the package maintainer\'s version)\.
.
.br
This KeySet differs from \fBbase\fR for every key someone has changed\.
.
.br

.
.P
The three\-way merge works by comparing the \fBour\fR KeySet and the \fBtheir\fR KeySet to the \fBbase\fR KeySet\. By looking for differences in these KeySets, a new KeySet called \fBresult\fR is created that represents a merge of these KeySets\.
.
.br
.
.SH "CONFLICTS"
Conflicts occur when a key has a different value in all three key sets or when only base differs\. When all three values for a key differ, we call this an overlap\. Different merge strategies \fIelektra\-cmerge\-strategy\.md\fR exist to resolve those conflicts\.
.
.br
.
.SH "EXAMPLES"
To complete a simple merge of three KeySets:
.
.br
.
.IP "" 4
.
.nf

kdb set user/base "A"
#> Create a new key user/base with string "A"
kdb set user/their "A"
#> Create a new key user/their with string "A"
kdb set user/our "B"
#> Create a new key user/our with string "B"
kdb cmerge user/our user/their user/base user/result
kdb get user/result
#>B

```<br>

## SEE ALSO

\- [elektra\-cmerge\-strategy(7)](elektra\-cmerge\-strategy\.md)
\- [elektra\-key\-names(7)](elektra\-key\-names\.md) for an explanation of key names\.
.
.fi
.
.IP "" 0

