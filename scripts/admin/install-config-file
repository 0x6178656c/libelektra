#!/bin/sh

# @author Dominic JÃ¤ger <e1634025@student.tuwien.ac.at>
# @brief Installs or merges a configuration file in Elektra
# @date 2019-08-20
# @tags creator

# This is a part of the preserved base path
specialPathStart="user/elektra/merge/preserve/"
# This is the path where a config file is loaded temporarily for merging
# cannot use user/elektra here and use mount at the same time
tempPath="user/tmp/merge"

our=$1
their=$2

if [ "$#" -eq 2 ]; then
	format="line"
elif [ "$#" -eq 3 ]; then
	format=$3
else
	echo "Usage is $0 <elektra path> <config file> [<format>]. It has to called as root."
	exit 1
fi

# use the file name (without path) of <config file> as special path
# in Elektra
specialPathEnd=$(basename $their)
if [ -z "$specialPathEnd" ]; then
	specialPathEnd=$their
fi
base="${specialPathStart}${specialPathEnd}"

# check if something is in <elektra path>
if [ $(kdb ls $our | wc -c) = 0 ]; then
	kdb mount --with-recommends $their $our $format
	if ! [ $? -eq 0 ]; then
		echo "Could not mount file $their. Got code $?"
		exit 1
	fi
	resolvedLocation=$(kdb file $our)
	if ! [ -f $resolvedLocation ]; then
		echo "Could not import file $resolvedLocation as it does not exist!"
		exit 1
	fi
	cat $resolvedLocation | kdb import $base $format
else
	# we could also import and export at this place
	# however, mounting a second time gives a more consistent user experience
	# as like this the resolver is used for <config file> each time the script
	# is called
	kdb mount -q --with-recommends $their $tempPath $format
	if ! [ $? -eq 0 ]; then
		echo "Could not mount file $their. Got code $?"
		exit 1
	fi
	kdb cmerge -f $our $tempPath $base $our $format
	kdb umount $tempPath
fi
